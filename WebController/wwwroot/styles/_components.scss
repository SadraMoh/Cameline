@import "vars";
@import "utility";

//-
//- Components

// anchor tags
a,
.link {
    color: lighten($color: $secondary, $amount: 2%);
    text-decoration: none;
    cursor: pointer;
}

a:hover,
.link:hover {
    color: lighten($color: $secondary, $amount: 10%);

    img {
        filter: brightness(110%);
    }
}

a:active,
.link:active {
    color: lighten($color: $primary, $amount: 20%);
    text-shadow: 0 0 0;

    img {
        filter: brightness(120%);
    }
}

.entry-invis {
    background-color: transparent;
    border: 0;
    font-size: 1em;
    padding: 6px 8px;
    color: $text-1;
}

// -------------------- Forms -------------------- //

// #region control

$control-background: #2A2A2A;
$control-border-color: #4D4D4D;
$control-border: 1px solid $border-color;

$control-height: 36px;

.control {
    height: $control-height;
    background-color: $control-background;
    border: $border;
    border-radius: $border-radius;
    color: $text-1;
    display: flex !important;
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: center;
    justify-content: center;
    //-
    @include border-def-radius;
}

$control-button-background: #373737;

button.control, .material-symbols-sharp.control {
    background-color: $control-button-background;
    height: $control-height;
    width: $control-height;
    @include trans;
}

button.control:hover {
    background-color: lighten($control-button-background, 12%);
    @include transs;
    transition-property: background-color;
}



.invisibox {
    background: transparent;
    color: $text-2;
    @include placeholder($text-4);
    padding: 8px 10px;
    font-size: 1em;
    width: 100%;
}

.textbox,
.textarea {
}

.range {
    margin: 0 8px;
    /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
    &::-webkit-slider-thumb, &::-moz-range-thumb {
        -webkit-appearance: none;
        appearance: none;
        cursor: pointer;
        width: 18px;
        height: 18px;
        border: $border;
        background-color: $material-3;
        @include circle;
        @include trans;
    }
    /* Mouse-over effects */
    &:hover::-webkit-slider-thumb {
        background-color: $material-1;
    }
}

.textbox:disabled,
.textbox:read-only,
.textarea:disabled,
.textarea:read-only {
    background-color: lighten($control-background, 12%);
    color: $text-3;
    cursor: text;
}

.checkbox {
    @include row;
    align-items: center;
    justify-items: flex-start;

    .text {
        margin-left: 8px;
        cursor: pointer;
        color: $text-2;
        @include trans;
    }

    input:focus + .text {
        color: $text-1;
    }

    $checkbox-size: 22px;

    input {
        appearance: none;
        width: $checkbox-size;
        height: $checkbox-size;
        background-color: transparent;
        border-radius: 3px;
        border: 2px solid $border-color;
        @include trans;
        cursor: pointer;
    }

    input:focus {
        border-color: $primary;
    }

    input:checked {
        border-color: $primary;
        background-color: $primary;
    }

    input:checked::after {
        content: "";
        position: relative;
        display: block;
        width: 11px;
        height: 5px;
        margin-left: 2px;
        margin-top: 3.2px;
        transform: rotate(-45deg);
        $cborder: 2.3pt solid $text-1;
        border-left: $cborder;
        border-bottom: $cborder;
        @include trans;
    }
}

.fg {
    @include col;
    margin-bottom: $gap-s;

    > label:first-child,
    .fg-label {
        margin-bottom: $gap-xs;
    }
}

.fh {
    @include row;

    .control {
        border-radius: 0;
    }
    // remove left border for all elements except the first one
    > *:not(:first-child) > .control,
    > *:not(:first-child) > * > .control,
    > .control:not(:first-child) {
        border-left: none;
    }
    // round left element borders
    > *:first-child > .control,
    > *:first-child > * > .control,
    > .control:first-child {
        border-top-left-radius: $border-radius;
        border-bottom-left-radius: $border-radius;
    }
    // round righ element borders
    > *:last-child > .control,
    > *:last-child > * > .control,
    > .control:last-child {
        border-top-right-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
    }
}
// #endregion control
// #region Table

/* --- {drop} --- */

$drop-offset: 8px;

.pos-relative {
    position: relative;
}

.drop-parent {
    position: relative;
}

.drop-parent:hover {
    drop[mode=hover] {
        @include transs;
        display: block;
    }
}

drop {
    position: absolute;
    z-index: 1000;
    display: none;
}

drop[direction=bottom] {
    /*top: calc(100% + #{$drop-offset});*/
    top: 100%;
    left: 0;
    border-top: solid transparent $drop-offset;
}

drop[direction=top] {
    /*bottom: calc(100% + #{$drop-offset});*/
    bottom: 100%;
    left: 0;
    border-bottom: solid transparent $drop-offset;
}

drop[direction=right] {
    /*left: calc(100% + #{$drop-offset});*/
    left: 100%;
    top: 0;
    border-left: solid transparent $drop-offset;
}

drop[direction=left] {
    /*right: calc(100% + #{$drop-offset});*/
    right: 100%;
    top: 0;
    border-right: solid transparent $drop-offset;
}


$table-padding: 8px;

.tbl {
    border-spacing: 0;

    thead {
        tr {
            background-color: $material-3;

            th {
                padding: $table-padding;
                text-align: left;
            }

            th:first-child {
                padding-left: 16px;
            }

            th:last-child {
                padding-right: 16px;
            }
        }
    }

    tbody {
        tr {
            background-color: $material-1;
            @include trans(0.32s);

            td {
                padding: $table-padding;
            }

            td:first-child {
                padding-left: 16px;
            }

            td:last-child {
                padding-right: 16px;
            }
        }
    }
}

.tbl.tbl-striped {
    tbody {
        tr:nth-child(2n - 1) {
            background-color: $material-2;
        }
    }
}

.tbl.tbl-hover {
    tbody {
        tr:hover {
            @include trans(0.16s);
            background-color: lighten($color: $material-1, $amount: 6%);
        }
    }
}

.tbl.tbl-hover.tbl.tbl-striped {
    tbody {
        tr:nth-child(2n-1):hover {
            background-color: lighten($color: $material-1, $amount: 6%);
        }
    }
}

.tbl.round {
    overflow: hidden;
    @include border-def-radius;
}
// #endregion Table

/* width */
::-webkit-scrollbar {
    width: 16px;
}
/* Track */
::-webkit-scrollbar-track {
    background-color: darken($background, 4%);
}
/* Handle */
::-webkit-scrollbar-thumb {
    background: lighten($color: $card-border-color, $amount: 8%);
}
/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: darken($color: $primary, $amount: 0%);
}
//- layout

.container,
.container-fluid {
    width: 100%;
}

.page {
    min-height: 100vh;
}

.layout-content {
    margin-top: $toolbar-height;
    min-height: calc(100vh - #{$toolbar-height});
    @include col;
}

.page-padding {
    padding: 20px 0;
}

.page-gap {
    gap: $gap-l;
}

// -------------------- Implementations -------------------- //

.card {
    @include card;
}

.mat-1 {
    background-color: $material-1;
}

.mat-2 {
    background-color: $material-2;
}

.mat-3 {
    background-color: $material-3;
}

.mat-4 {
    background-color: $material-4;
}

.border-def-radius,
.round {
    @include border-def-radius;
}

.shadow-xs {
    @include shadow-xs;
}

.shadow-s {
    @include shadow-s;
}

.shadow-m {
    @include shadow-m;
}

.shadow-lg {
    @include shadow-lg;
}

.shadow-xlg {
    @include shadow-xlg;
}
